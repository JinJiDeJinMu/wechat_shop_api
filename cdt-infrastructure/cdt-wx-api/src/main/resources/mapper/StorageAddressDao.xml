<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.StorageAddressDao">

    <resultMap type="com.platform.entity.StorageAddressEntity" id="storageAddressMap">
        <result property="id" column="id"/>
        <result property="province" column="province"/>
        <result property="city" column="city"/>
        <result property="area" column="area"/>
        <result property="userId" column="user_id"/>
    </resultMap>

    <select id="queryObject" resultType="com.platform.entity.StorageAddressEntity">
		select
			`id`,
    			`province`,
    			`city`,
    			`area`,
    			`user_id`
		from storage_address
		where id = #{id}
	</select>

    <select id="queryList" resultType="com.platform.entity.StorageAddressEntity">
        select
        `id`,
        `province`,
        `city`,
        `area`,
        `user_id`
        from storage_address
        WHERE 1=1
        <if test="name != null and name != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from storage_address
        WHERE 1=1
        <if test="name != null and name != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>

    <insert id="save" parameterType="com.platform.entity.StorageAddressEntity">
		insert into storage_address(
        			`id`,
                    			`province`,
                    			`city`,
                    			`area`,
                    			`user_id`            )
		values(
        			#{id},
                    			#{province},
                    			#{city},
                    			#{area},
                    			#{userId}            )
	</insert>

    <update id="update" parameterType="com.platform.entity.StorageAddressEntity">
        update storage_address
        <set>
            <if test="province != null">`province` = #{province
                        },
            </if>
            <if test="city != null">`city` = #{city
                        },
            </if>
            <if test="area != null">`area` = #{area
                        },
            </if>
            <if test="userId != null">`user_id` = #{userId
                        }
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from storage_address where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from storage_address where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>